/* tslint:disable */
/* eslint-disable */
/**
 * auth-service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
} from './UserRole';
import type { UserPerm } from './UserPerm';
import {
    UserPermFromJSON,
    UserPermFromJSONTyped,
    UserPermToJSON,
} from './UserPerm';
import type { UserStatus } from './UserStatus';
import {
    UserStatusFromJSON,
    UserStatusFromJSONTyped,
    UserStatusToJSON,
} from './UserStatus';

/**
 * 
 * @export
 * @interface UserData
 */
export interface UserData {
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    lastName?: string;
    /**
     * 
     * @type {Array<UserRole>}
     * @memberof UserData
     */
    roles?: Array<UserRole>;
    /**
     * 
     * @type {Array<UserPerm>}
     * @memberof UserData
     */
    perms?: Array<UserPerm>;
    /**
     * 
     * @type {UserStatus}
     * @memberof UserData
     */
    status?: UserStatus;
    /**
     * 
     * @type {Date}
     * @memberof UserData
     */
    created?: Date;
}



/**
 * Check if a given object implements the UserData interface.
 */
export function instanceOfUserData(value: object): value is UserData {
    return true;
}

export function UserDataFromJSON(json: any): UserData {
    return UserDataFromJSONTyped(json, false);
}

export function UserDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'username': json['username'] == null ? undefined : json['username'],
        'password': json['password'] == null ? undefined : json['password'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(UserRoleFromJSON)),
        'perms': json['perms'] == null ? undefined : ((json['perms'] as Array<any>).map(UserPermFromJSON)),
        'status': json['status'] == null ? undefined : UserStatusFromJSON(json['status']),
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
    };
}

export function UserDataToJSON(value?: UserData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'username': value['username'],
        'password': value['password'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(UserRoleToJSON)),
        'perms': value['perms'] == null ? undefined : ((value['perms'] as Array<any>).map(UserPermToJSON)),
        'status': UserStatusToJSON(value['status']),
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
    };
}

